<?xml version="1.0" encoding="UTF-8"?>
<robot generated="20170302 20:13:18.231" generator="Robot 3.0.2 (Python 2.7.11 on win32)">
<suite source="C:\WFO-Codeless\tests\DB\DB_intaraction.robot" id="s1" name="DB intaraction">
<kw type="setup" name="Suite Setup" library="suiteSetup">
<kw name="Set Automation Global Variables" library="suiteSetup">
<kw name="Set Global Variable" library="BuiltIn">
<doc>Makes a variable available globally in all tests and suites.</doc>
<arguments>
<arg>${ScreenshotOutputDirectory}</arg>
</arguments>
<msg timestamp="20170302 20:13:20.960" level="INFO">${ScreenshotOutputDirectory} = C:/NPMGit/WFO-Codeless/output/Screenshot</msg>
<status status="PASS" endtime="20170302 20:13:20.960" starttime="20170302 20:13:20.959"></status>
</kw>
<kw name="Set Global Variable" library="BuiltIn">
<doc>Makes a variable available globally in all tests and suites.</doc>
<arguments>
<arg>${DELAY}</arg>
</arguments>
<msg timestamp="20170302 20:13:20.961" level="INFO">${DELAY} = .1 seconds</msg>
<status status="PASS" endtime="20170302 20:13:20.961" starttime="20170302 20:13:20.960"></status>
</kw>
<kw name="Set Global Variable" library="BuiltIn">
<doc>Makes a variable available globally in all tests and suites.</doc>
<arguments>
<arg>${ScreenshotName}</arg>
</arguments>
<msg timestamp="20170302 20:13:20.962" level="INFO">${ScreenshotName} = C:/NPMGit/WFO-Codeless/output/Screenshot\selenium-manual-screenshot-{index}.png</msg>
<status status="PASS" endtime="20170302 20:13:20.962" starttime="20170302 20:13:20.961"></status>
</kw>
<kw name="Set Global Variable" library="BuiltIn">
<doc>Makes a variable available globally in all tests and suites.</doc>
<arguments>
<arg>${LocalLogFolderPath}</arg>
</arguments>
<msg timestamp="20170302 20:13:20.964" level="INFO">${LocalLogFolderPath} = C:\NPMGit\WFO-Codeless\output\logs</msg>
<status status="PASS" endtime="20170302 20:13:20.964" starttime="20170302 20:13:20.963"></status>
</kw>
<kw name="Set Global Variable" library="BuiltIn">
<doc>Makes a variable available globally in all tests and suites.</doc>
<arguments>
<arg>${NCATLogFolderPath}</arg>
</arguments>
<msg timestamp="20170302 20:13:20.965" level="INFO">${NCATLogFolderPath} = /NCAT/NCAT/server/apache-tomcat-7.0.57/logs</msg>
<status status="PASS" endtime="20170302 20:13:20.965" starttime="20170302 20:13:20.964"></status>
</kw>
<kw name="Set Global Variable" library="BuiltIn">
<doc>Makes a variable available globally in all tests and suites.</doc>
<arguments>
<arg>${linux_server3}</arg>
</arguments>
<msg timestamp="20170302 20:13:20.966" level="INFO">${linux_server3} = 172.30.17.15</msg>
<status status="PASS" endtime="20170302 20:13:20.966" starttime="20170302 20:13:20.966"></status>
</kw>
<kw name="Set Screenshot Directory" library="Screenshot">
<doc>Sets the directory where screenshots are saved.</doc>
<arguments>
<arg>${ScreenshotOutputDirectory}</arg>
</arguments>
<status status="PASS" endtime="20170302 20:13:20.969" starttime="20170302 20:13:20.967"></status>
</kw>
<kw name="Set Selenium Speed" library="Selenium2Library">
<doc>Sets the delay in seconds that is waited after each Selenium command.</doc>
<arguments>
<arg>${DELAY}</arg>
</arguments>
<status status="PASS" endtime="20170302 20:13:20.970" starttime="20170302 20:13:20.970"></status>
</kw>
<status status="PASS" endtime="20170302 20:13:20.971" starttime="20170302 20:13:20.959"></status>
</kw>
<kw name="Set Default Configuration" library="SSHLibrary">
<doc>Update the default `configuration`.</doc>
<arguments>
<arg>timeout=20 minute</arg>
</arguments>
<status status="PASS" endtime="20170302 20:13:20.972" starttime="20170302 20:13:20.971"></status>
</kw>
<kw name="Open Server connecions" library="serverConnection">
<kw name="Open Connection to LinuxServer1 And Log In" library="serverConnection">
<doc>This Keyword open a connection to a LinuxServer1</doc>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${linux_server1}</arg>
</arguments>
<msg timestamp="20170302 20:13:20.974" level="INFO">172.30.16.131</msg>
<status status="PASS" endtime="20170302 20:13:20.974" starttime="20170302 20:13:20.974"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${USERNAME}</arg>
</arguments>
<msg timestamp="20170302 20:13:20.975" level="INFO">root</msg>
<status status="PASS" endtime="20170302 20:13:20.976" starttime="20170302 20:13:20.975"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${PASSWORD}</arg>
</arguments>
<msg timestamp="20170302 20:13:20.977" level="INFO">Password1!</msg>
<status status="PASS" endtime="20170302 20:13:20.977" starttime="20170302 20:13:20.976"></status>
</kw>
<kw name="Open Connection" library="SSHLibrary">
<doc>Opens a new SSH connection to the given `host` and `port`.</doc>
<arguments>
<arg>${linux_server1}</arg>
<arg>alias=LinuxServer1</arg>
</arguments>
<status status="PASS" endtime="20170302 20:13:20.978" starttime="20170302 20:13:20.977"></status>
</kw>
<kw name="Login" library="SSHLibrary">
<doc>Logs into the SSH server with the given `username` and `password`.</doc>
<arguments>
<arg>${USERNAME}</arg>
<arg>${PASSWORD}</arg>
</arguments>
<msg timestamp="20170302 20:13:20.979" level="INFO">Logging into '172.30.16.131:22' as 'root'.</msg>
<msg timestamp="20170302 20:13:22.764" level="INFO">Read output: Last login: Thu Mar  2 16:42:05 2017 from 172.23.149.19
[root@ENT-CL-001409 ~]#</msg>
<status status="PASS" endtime="20170302 20:13:22.764" starttime="20170302 20:13:20.978"></status>
</kw>
<status status="PASS" endtime="20170302 20:13:22.764" starttime="20170302 20:13:20.973"></status>
</kw>
<kw name="Open Connection to LinuxServer2 And Log In" library="serverConnection">
<doc>This Keyword open a connection to a LinuxServer2 system</doc>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${linux_server2}</arg>
</arguments>
<msg timestamp="20170302 20:13:22.766" level="INFO">172.30.16.96</msg>
<status status="PASS" endtime="20170302 20:13:22.766" starttime="20170302 20:13:22.765"></status>
</kw>
<kw name="Open Connection" library="SSHLibrary">
<doc>Opens a new SSH connection to the given `host` and `port`.</doc>
<arguments>
<arg>${linux_server2}</arg>
<arg>alias=LinuxServer2</arg>
</arguments>
<status status="PASS" endtime="20170302 20:13:22.767" starttime="20170302 20:13:22.766"></status>
</kw>
<kw name="Login" library="SSHLibrary">
<doc>Logs into the SSH server with the given `username` and `password`.</doc>
<arguments>
<arg>${USERNAME}</arg>
<arg>${PASSWORD}</arg>
</arguments>
<msg timestamp="20170302 20:13:22.767" level="INFO">Logging into '172.30.16.96:22' as 'root'.</msg>
<msg timestamp="20170302 20:13:23.981" level="INFO">Read output: Last login: Thu Mar  2 16:42:06 2017 from 172.23.149.19
[root@ENT-CL-001371 ~]#</msg>
<status status="PASS" endtime="20170302 20:13:23.981" starttime="20170302 20:13:22.767"></status>
</kw>
<status status="PASS" endtime="20170302 20:13:23.981" starttime="20170302 20:13:22.765"></status>
</kw>
<kw name="Open Connection to LinuxServer3 And Log In" library="serverConnection">
<doc>This Keyword open a connection to a LinuxServer2 system</doc>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${linux_server3}</arg>
</arguments>
<msg timestamp="20170302 20:13:23.981" level="INFO">172.30.17.15</msg>
<status status="PASS" endtime="20170302 20:13:23.981" starttime="20170302 20:13:23.981"></status>
</kw>
<kw name="Open Connection" library="SSHLibrary">
<doc>Opens a new SSH connection to the given `host` and `port`.</doc>
<arguments>
<arg>${linux_server3}</arg>
<arg>alias=LinuxServer3</arg>
</arguments>
<status status="PASS" endtime="20170302 20:13:23.981" starttime="20170302 20:13:23.981"></status>
</kw>
<kw name="Login" library="SSHLibrary">
<doc>Logs into the SSH server with the given `username` and `password`.</doc>
<arguments>
<arg>${USERNAME}</arg>
<arg>${PASSWORD}</arg>
</arguments>
<msg timestamp="20170302 20:13:23.981" level="INFO">Logging into '172.30.17.15:22' as 'root'.</msg>
<msg timestamp="20170302 20:13:25.474" level="INFO">Read output: Last login: Thu Mar  2 16:42:05 2017 from 172.23.149.19
[root@ENT-CL-000408 ~]#</msg>
<status status="PASS" endtime="20170302 20:13:25.474" starttime="20170302 20:13:23.981"></status>
</kw>
<status status="PASS" endtime="20170302 20:13:25.474" starttime="20170302 20:13:23.981"></status>
</kw>
<kw name="Switch and Verify Connection to LinuxServer1" library="serverConnection">
<kw name="Switch Connection" library="SSHLibrary">
<doc>Switches the active connection by index or alias.</doc>
<arguments>
<arg>LinuxServer1</arg>
</arguments>
<status status="PASS" endtime="20170302 20:13:25.474" starttime="20170302 20:13:25.474"></status>
</kw>
<kw name="Get Connection" library="SSHLibrary">
<doc>Return information about the connection.</doc>
<assign>
<var>${LinuxServer1}</var>
</assign>
<msg timestamp="20170302 20:13:25.474" level="INFO">index=1
path_separator=/
prompt=None
width=80
newline=

height=24
encoding=UTF-8
alias=LinuxServer1
host=172.30.16.131
timeout=20 minutes
term_type=vt100
port=22</msg>
<msg timestamp="20170302 20:13:25.474" level="INFO">${LinuxServer1} = index=1
path_separator=/
prompt=None
width=80
newline=

height=24
encoding=UTF-8
alias=LinuxServer1
host=172.30.16.131
timeout=20 minutes
term_type=vt100
port=22</msg>
<status status="PASS" endtime="20170302 20:13:25.474" starttime="20170302 20:13:25.474"></status>
</kw>
<kw name="Should Be Equal" library="BuiltIn">
<doc>Fails if the given objects are unequal.</doc>
<arguments>
<arg>${LinuxServer1.alias}</arg>
<arg>LinuxServer1</arg>
<arg>.</arg>
</arguments>
<msg timestamp="20170302 20:13:25.474" level="INFO">Argument types are:
&lt;type 'str'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20170302 20:13:25.474" starttime="20170302 20:13:25.474"></status>
</kw>
<kw name="Execute Command" library="SSHLibrary">
<doc>Executes `command` on the remote machine and returns its outputs.</doc>
<arguments>
<arg>hostname</arg>
</arguments>
<assign>
<var>${LinuxServer1_hostname}</var>
</assign>
<msg timestamp="20170302 20:13:25.474" level="INFO">Executing command 'hostname'.</msg>
<msg timestamp="20170302 20:13:25.505" level="INFO">Command exited with return code 0.</msg>
<msg timestamp="20170302 20:13:25.505" level="INFO">${LinuxServer1_hostname} = ENT-CL-001409</msg>
<status status="PASS" endtime="20170302 20:13:25.505" starttime="20170302 20:13:25.474"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${LinuxServer1_hostname}</arg>
</arguments>
<msg timestamp="20170302 20:13:25.505" level="INFO">ENT-CL-001409</msg>
<status status="PASS" endtime="20170302 20:13:25.505" starttime="20170302 20:13:25.505"></status>
</kw>
<status status="PASS" endtime="20170302 20:13:25.505" starttime="20170302 20:13:25.474"></status>
</kw>
<kw name="Switch and Verify Connection to LinuxServer2" library="serverConnection">
<kw name="Switch Connection" library="SSHLibrary">
<doc>Switches the active connection by index or alias.</doc>
<arguments>
<arg>LinuxServer2</arg>
</arguments>
<status status="PASS" endtime="20170302 20:13:25.505" starttime="20170302 20:13:25.505"></status>
</kw>
<kw name="Get Connection" library="SSHLibrary">
<doc>Return information about the connection.</doc>
<assign>
<var>${LinuxServer2}</var>
</assign>
<msg timestamp="20170302 20:13:25.505" level="INFO">index=2
path_separator=/
prompt=None
width=80
newline=

height=24
encoding=UTF-8
alias=LinuxServer2
host=172.30.16.96
timeout=20 minutes
term_type=vt100
port=22</msg>
<msg timestamp="20170302 20:13:25.505" level="INFO">${LinuxServer2} = index=2
path_separator=/
prompt=None
width=80
newline=

height=24
encoding=UTF-8
alias=LinuxServer2
host=172.30.16.96
timeout=20 minutes
term_type=vt100
port=22</msg>
<status status="PASS" endtime="20170302 20:13:25.505" starttime="20170302 20:13:25.505"></status>
</kw>
<kw name="Should Be Equal" library="BuiltIn">
<doc>Fails if the given objects are unequal.</doc>
<arguments>
<arg>${LinuxServer2.alias}</arg>
<arg>LinuxServer2</arg>
<arg>.</arg>
</arguments>
<msg timestamp="20170302 20:13:25.505" level="INFO">Argument types are:
&lt;type 'str'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20170302 20:13:25.505" starttime="20170302 20:13:25.505"></status>
</kw>
<kw name="Execute Command" library="SSHLibrary">
<doc>Executes `command` on the remote machine and returns its outputs.</doc>
<arguments>
<arg>hostname</arg>
</arguments>
<assign>
<var>${LinuxServer2_hostname}</var>
</assign>
<msg timestamp="20170302 20:13:25.505" level="INFO">Executing command 'hostname'.</msg>
<msg timestamp="20170302 20:13:25.543" level="INFO">Command exited with return code 0.</msg>
<msg timestamp="20170302 20:13:25.543" level="INFO">${LinuxServer2_hostname} = ENT-CL-001371</msg>
<status status="PASS" endtime="20170302 20:13:25.543" starttime="20170302 20:13:25.505"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${LinuxServer2_hostname}</arg>
</arguments>
<msg timestamp="20170302 20:13:25.543" level="INFO">ENT-CL-001371</msg>
<status status="PASS" endtime="20170302 20:13:25.543" starttime="20170302 20:13:25.543"></status>
</kw>
<status status="PASS" endtime="20170302 20:13:25.543" starttime="20170302 20:13:25.505"></status>
</kw>
<kw name="Switch and Verify Connection to LinuxServer3" library="serverConnection">
<kw name="Switch Connection" library="SSHLibrary">
<doc>Switches the active connection by index or alias.</doc>
<arguments>
<arg>LinuxServer3</arg>
</arguments>
<status status="PASS" endtime="20170302 20:13:25.543" starttime="20170302 20:13:25.543"></status>
</kw>
<kw name="Get Connection" library="SSHLibrary">
<doc>Return information about the connection.</doc>
<assign>
<var>${LinuxServer3}</var>
</assign>
<msg timestamp="20170302 20:13:25.543" level="INFO">index=3
path_separator=/
prompt=None
width=80
newline=

height=24
encoding=UTF-8
alias=LinuxServer3
host=172.30.17.15
timeout=20 minutes
term_type=vt100
port=22</msg>
<msg timestamp="20170302 20:13:25.543" level="INFO">${LinuxServer3} = index=3
path_separator=/
prompt=None
width=80
newline=

height=24
encoding=UTF-8
alias=LinuxServer3
host=172.30.17.15
timeout=20 minutes
term_type=vt100
port=22</msg>
<status status="PASS" endtime="20170302 20:13:25.543" starttime="20170302 20:13:25.543"></status>
</kw>
<kw name="Should Be Equal" library="BuiltIn">
<doc>Fails if the given objects are unequal.</doc>
<arguments>
<arg>${LinuxServer3.alias}</arg>
<arg>LinuxServer3</arg>
<arg>.</arg>
</arguments>
<msg timestamp="20170302 20:13:25.543" level="INFO">Argument types are:
&lt;type 'str'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20170302 20:13:25.543" starttime="20170302 20:13:25.543"></status>
</kw>
<kw name="Execute Command" library="SSHLibrary">
<doc>Executes `command` on the remote machine and returns its outputs.</doc>
<arguments>
<arg>hostname</arg>
</arguments>
<assign>
<var>${LinuxServer3_hostname}</var>
</assign>
<msg timestamp="20170302 20:13:25.543" level="INFO">Executing command 'hostname'.</msg>
<msg timestamp="20170302 20:13:25.566" level="INFO">Command exited with return code 0.</msg>
<msg timestamp="20170302 20:13:25.566" level="INFO">${LinuxServer3_hostname} = ENT-CL-000408</msg>
<status status="PASS" endtime="20170302 20:13:25.566" starttime="20170302 20:13:25.543"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${LinuxServer3_hostname}</arg>
</arguments>
<msg timestamp="20170302 20:13:25.566" level="INFO">ENT-CL-000408</msg>
<status status="PASS" endtime="20170302 20:13:25.576" starttime="20170302 20:13:25.566"></status>
</kw>
<status status="PASS" endtime="20170302 20:13:25.576" starttime="20170302 20:13:25.543"></status>
</kw>
<status status="PASS" endtime="20170302 20:13:25.576" starttime="20170302 20:13:20.972"></status>
</kw>
<kw name="Open Connection To MYSQL PHS_EDB Database" library="DB_intaraction">
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${DBName}</arg>
</arguments>
<msg timestamp="20170302 20:13:25.586" level="INFO">phs_edb</msg>
<status status="PASS" endtime="20170302 20:13:25.586" starttime="20170302 20:13:25.576"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${DBUser}</arg>
</arguments>
<msg timestamp="20170302 20:13:25.586" level="INFO">root</msg>
<status status="PASS" endtime="20170302 20:13:25.586" starttime="20170302 20:13:25.586"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${DBPass}</arg>
</arguments>
<msg timestamp="20170302 20:13:25.586" level="INFO">password</msg>
<status status="PASS" endtime="20170302 20:13:25.586" starttime="20170302 20:13:25.586"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${DBHost}</arg>
</arguments>
<msg timestamp="20170302 20:13:25.586" level="INFO">1.224.0.62</msg>
<status status="PASS" endtime="20170302 20:13:25.586" starttime="20170302 20:13:25.586"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${DBPort}</arg>
</arguments>
<msg timestamp="20170302 20:13:25.586" level="INFO">3306</msg>
<status status="PASS" endtime="20170302 20:13:25.586" starttime="20170302 20:13:25.586"></status>
</kw>
<kw name="Connect To Database" library="DatabaseLibrary">
<doc>Loads the DB API 2.0 module given `dbapiModuleName` then uses it to</doc>
<arguments>
<arg>pymysql</arg>
<arg>${DBName}</arg>
<arg>${DBUser}</arg>
<arg>${DBPass}</arg>
<arg>${DBHost}</arg>
<arg>${DBPort}</arg>
</arguments>
<status status="PASS" endtime="20170302 20:13:25.687" starttime="20170302 20:13:25.586"></status>
</kw>
<status status="PASS" endtime="20170302 20:13:25.687" starttime="20170302 20:13:25.576"></status>
</kw>
<status status="PASS" endtime="20170302 20:13:25.687" starttime="20170302 20:13:20.958"></status>
</kw>
<test id="s1-t1" name="Connect To DB Servers and Create Employee Table">
<kw type="setup" name="DB Test Setup" library="testSetup">
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>UI Test Setup nothing is implemented yet</arg>
</arguments>
<msg timestamp="20170302 20:13:25.687" level="INFO">UI Test Setup nothing is implemented yet</msg>
<status status="PASS" endtime="20170302 20:13:25.687" starttime="20170302 20:13:25.687"></status>
</kw>
<status status="PASS" endtime="20170302 20:13:25.687" starttime="20170302 20:13:25.687"></status>
</kw>
<kw name="Execute Sql String" library="DatabaseLibrary">
<doc>Executes the sqlString as SQL commands.</doc>
<arguments>
<arg>CREATE TABLE Employee (id integer unique,first_name varchar(20),last_name varchar(20));</arg>
</arguments>
<assign>
<var>${output}</var>
</assign>
<msg timestamp="20170302 20:13:25.708" level="INFO">${output} = None</msg>
<status status="PASS" endtime="20170302 20:13:25.708" starttime="20170302 20:13:25.687"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20170302 20:13:25.708" level="INFO">None</msg>
<status status="PASS" endtime="20170302 20:13:25.708" starttime="20170302 20:13:25.708"></status>
</kw>
<kw name="Should Be Equal As Strings" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to strings.</doc>
<arguments>
<arg>${output}</arg>
<arg>None</arg>
</arguments>
<msg timestamp="20170302 20:13:25.708" level="INFO">Argument types are:
&lt;type 'NoneType'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20170302 20:13:25.708" starttime="20170302 20:13:25.708"></status>
</kw>
<kw type="teardown" name="DB Test Teardown" library="testTearDown">
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>SSH Test Teardown nothing is implemented yet</arg>
</arguments>
<msg timestamp="20170302 20:13:25.708" level="INFO">SSH Test Teardown nothing is implemented yet</msg>
<status status="PASS" endtime="20170302 20:13:25.708" starttime="20170302 20:13:25.708"></status>
</kw>
<status status="PASS" endtime="20170302 20:13:25.708" starttime="20170302 20:13:25.708"></status>
</kw>
<tags>
<tag>DB</tag>
</tags>
<status status="PASS" endtime="20170302 20:13:25.708" critical="yes" starttime="20170302 20:13:25.687"></status>
</test>
<test id="s1-t2" name="Execute SQL Script - Insert Data Employee table">
<kw type="setup" name="DB Test Setup" library="testSetup">
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>UI Test Setup nothing is implemented yet</arg>
</arguments>
<msg timestamp="20170302 20:13:25.708" level="INFO">UI Test Setup nothing is implemented yet</msg>
<status status="PASS" endtime="20170302 20:13:25.708" starttime="20170302 20:13:25.708"></status>
</kw>
<status status="PASS" endtime="20170302 20:13:25.708" starttime="20170302 20:13:25.708"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${EMP_DataSql}</arg>
</arguments>
<msg timestamp="20170302 20:13:25.708" level="INFO">C:\WFO-Codeless\testdata\DB\my_db_test_insertData.sql</msg>
<status status="PASS" endtime="20170302 20:13:25.708" starttime="20170302 20:13:25.708"></status>
</kw>
<kw name="File Should Exist" library="OperatingSystem">
<doc>Fails unless the given ``path`` points to an existing file.</doc>
<arguments>
<arg>${EMP_DataSql}</arg>
</arguments>
<msg timestamp="20170302 20:13:25.718" html="yes" level="INFO">File '&lt;a href="file://C:\WFO-Codeless\testdata\DB\my_db_test_insertData.sql"&gt;C:\WFO-Codeless\testdata\DB\my_db_test_insertData.sql&lt;/a&gt;' exists.</msg>
<status status="PASS" endtime="20170302 20:13:25.718" starttime="20170302 20:13:25.708"></status>
</kw>
<kw name="Execute Sql Script" library="DatabaseLibrary">
<doc>Executes the content of the `sqlScriptFileName` as SQL commands.</doc>
<arguments>
<arg>${EMP_DataSql}</arg>
</arguments>
<assign>
<var>${output}</var>
</assign>
<msg timestamp="20170302 20:13:25.728" level="INFO">${output} = None</msg>
<status status="PASS" endtime="20170302 20:13:25.728" starttime="20170302 20:13:25.718"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20170302 20:13:25.728" level="INFO">None</msg>
<status status="PASS" endtime="20170302 20:13:25.728" starttime="20170302 20:13:25.728"></status>
</kw>
<kw name="Should Be Equal As Strings" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to strings.</doc>
<arguments>
<arg>${output}</arg>
<arg>None</arg>
</arguments>
<msg timestamp="20170302 20:13:25.728" level="INFO">Argument types are:
&lt;type 'NoneType'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20170302 20:13:25.728" starttime="20170302 20:13:25.728"></status>
</kw>
<kw type="teardown" name="DB Test Teardown" library="testTearDown">
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>SSH Test Teardown nothing is implemented yet</arg>
</arguments>
<msg timestamp="20170302 20:13:25.728" level="INFO">SSH Test Teardown nothing is implemented yet</msg>
<status status="PASS" endtime="20170302 20:13:25.728" starttime="20170302 20:13:25.728"></status>
</kw>
<status status="PASS" endtime="20170302 20:13:25.728" starttime="20170302 20:13:25.728"></status>
</kw>
<tags>
<tag>DB</tag>
<tag>DB_SMOKE</tag>
</tags>
<status status="PASS" endtime="20170302 20:13:25.728" critical="yes" starttime="20170302 20:13:25.708"></status>
</test>
<test id="s1-t3" name="Table Must Exist - Employee">
<kw type="setup" name="DB Test Setup" library="testSetup">
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>UI Test Setup nothing is implemented yet</arg>
</arguments>
<msg timestamp="20170302 20:13:25.738" level="INFO">UI Test Setup nothing is implemented yet</msg>
<status status="PASS" endtime="20170302 20:13:25.738" starttime="20170302 20:13:25.738"></status>
</kw>
<status status="PASS" endtime="20170302 20:13:25.738" starttime="20170302 20:13:25.738"></status>
</kw>
<kw name="Table Must Exist" library="DatabaseLibrary">
<doc>Check if the table given exists in the database.</doc>
<arguments>
<arg>Employee</arg>
</arguments>
<status status="PASS" endtime="20170302 20:13:25.748" starttime="20170302 20:13:25.738"></status>
</kw>
<kw type="teardown" name="DB Test Teardown" library="testTearDown">
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>SSH Test Teardown nothing is implemented yet</arg>
</arguments>
<msg timestamp="20170302 20:13:25.748" level="INFO">SSH Test Teardown nothing is implemented yet</msg>
<status status="PASS" endtime="20170302 20:13:25.748" starttime="20170302 20:13:25.748"></status>
</kw>
<status status="PASS" endtime="20170302 20:13:25.748" starttime="20170302 20:13:25.748"></status>
</kw>
<tags>
<tag>DB</tag>
<tag>DB_SMOKE</tag>
</tags>
<status status="PASS" endtime="20170302 20:13:25.748" critical="yes" starttime="20170302 20:13:25.728"></status>
</test>
<test id="s1-t4" name="Table Must Exist - Employee1">
<kw type="setup" name="DB Test Setup" library="testSetup">
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>UI Test Setup nothing is implemented yet</arg>
</arguments>
<msg timestamp="20170302 20:13:25.748" level="INFO">UI Test Setup nothing is implemented yet</msg>
<status status="PASS" endtime="20170302 20:13:25.748" starttime="20170302 20:13:25.748"></status>
</kw>
<status status="PASS" endtime="20170302 20:13:25.748" starttime="20170302 20:13:25.748"></status>
</kw>
<kw name="Table Must Exist" library="DatabaseLibrary">
<doc>Check if the table given exists in the database.</doc>
<arguments>
<arg>Employee1</arg>
</arguments>
<msg timestamp="20170302 20:13:25.758" level="FAIL">Table 'Employee1' does not exist in the db</msg>
<status status="FAIL" endtime="20170302 20:13:25.758" starttime="20170302 20:13:25.748"></status>
</kw>
<kw type="teardown" name="DB Test Teardown" library="testTearDown">
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>SSH Test Teardown nothing is implemented yet</arg>
</arguments>
<msg timestamp="20170302 20:13:25.758" level="INFO">SSH Test Teardown nothing is implemented yet</msg>
<status status="PASS" endtime="20170302 20:13:25.758" starttime="20170302 20:13:25.758"></status>
</kw>
<status status="PASS" endtime="20170302 20:13:25.758" starttime="20170302 20:13:25.758"></status>
</kw>
<tags>
<tag>DB</tag>
<tag>DB_SMOKE</tag>
</tags>
<status status="FAIL" endtime="20170302 20:13:25.758" critical="yes" starttime="20170302 20:13:25.748">Table 'Employee1' does not exist in the db</status>
</test>
<test id="s1-t5" name="Check If Exists In DB - Franz Allan">
<kw type="setup" name="DB Test Setup" library="testSetup">
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>UI Test Setup nothing is implemented yet</arg>
</arguments>
<msg timestamp="20170302 20:13:25.758" level="INFO">UI Test Setup nothing is implemented yet</msg>
<status status="PASS" endtime="20170302 20:13:25.758" starttime="20170302 20:13:25.758"></status>
</kw>
<status status="PASS" endtime="20170302 20:13:25.758" starttime="20170302 20:13:25.758"></status>
</kw>
<kw name="Check If Exists In Database" library="DatabaseLibrary">
<doc>Check if any row would be returned by given the input</doc>
<arguments>
<arg>SELECT id FROM Employee WHERE first_name = 'Franz Allan';</arg>
</arguments>
<status status="PASS" endtime="20170302 20:13:25.768" starttime="20170302 20:13:25.758"></status>
</kw>
<kw type="teardown" name="DB Test Teardown" library="testTearDown">
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>SSH Test Teardown nothing is implemented yet</arg>
</arguments>
<msg timestamp="20170302 20:13:25.768" level="INFO">SSH Test Teardown nothing is implemented yet</msg>
<status status="PASS" endtime="20170302 20:13:25.768" starttime="20170302 20:13:25.768"></status>
</kw>
<status status="PASS" endtime="20170302 20:13:25.768" starttime="20170302 20:13:25.768"></status>
</kw>
<tags>
<tag>DB</tag>
<tag>DB_SMOKE</tag>
</tags>
<status status="PASS" endtime="20170302 20:13:25.768" critical="yes" starttime="20170302 20:13:25.758"></status>
</test>
<test id="s1-t6" name="Retrieve Row Count">
<kw type="setup" name="DB Test Setup" library="testSetup">
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>UI Test Setup nothing is implemented yet</arg>
</arguments>
<msg timestamp="20170302 20:13:25.768" level="INFO">UI Test Setup nothing is implemented yet</msg>
<status status="PASS" endtime="20170302 20:13:25.768" starttime="20170302 20:13:25.768"></status>
</kw>
<status status="PASS" endtime="20170302 20:13:25.768" starttime="20170302 20:13:25.768"></status>
</kw>
<kw name="Row Count" library="DatabaseLibrary">
<doc>Uses the input `selectStatement` to query the database and returns</doc>
<arguments>
<arg>SELECT id FROM Employee;</arg>
</arguments>
<assign>
<var>${output}</var>
</assign>
<msg timestamp="20170302 20:13:25.768" level="INFO">${output} = 2</msg>
<status status="PASS" endtime="20170302 20:13:25.768" starttime="20170302 20:13:25.768"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20170302 20:13:25.778" level="INFO">2</msg>
<status status="PASS" endtime="20170302 20:13:25.778" starttime="20170302 20:13:25.768"></status>
</kw>
<kw name="Should Be Equal As Strings" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to strings.</doc>
<arguments>
<arg>${output}</arg>
<arg>2</arg>
</arguments>
<msg timestamp="20170302 20:13:25.778" level="INFO">Argument types are:
&lt;type 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20170302 20:13:25.778" starttime="20170302 20:13:25.778"></status>
</kw>
<kw type="teardown" name="DB Test Teardown" library="testTearDown">
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>SSH Test Teardown nothing is implemented yet</arg>
</arguments>
<msg timestamp="20170302 20:13:25.778" level="INFO">SSH Test Teardown nothing is implemented yet</msg>
<status status="PASS" endtime="20170302 20:13:25.778" starttime="20170302 20:13:25.778"></status>
</kw>
<status status="PASS" endtime="20170302 20:13:25.778" starttime="20170302 20:13:25.778"></status>
</kw>
<tags>
<tag>db</tag>
<tag>smoke</tag>
</tags>
<status status="PASS" endtime="20170302 20:13:25.778" critical="yes" starttime="20170302 20:13:25.768"></status>
</test>
<test id="s1-t7" name="Add Employee in first transaction">
<kw type="setup" name="DB Test Setup" library="testSetup">
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>UI Test Setup nothing is implemented yet</arg>
</arguments>
<msg timestamp="20170302 20:13:25.778" level="INFO">UI Test Setup nothing is implemented yet</msg>
<status status="PASS" endtime="20170302 20:13:25.778" starttime="20170302 20:13:25.778"></status>
</kw>
<status status="PASS" endtime="20170302 20:13:25.778" starttime="20170302 20:13:25.778"></status>
</kw>
<kw name="Execute Sql String" library="DatabaseLibrary">
<doc>Executes the sqlString as SQL commands.</doc>
<arguments>
<arg>INSERT INTO Employee VALUES(101,'Bilbo','Baggins');</arg>
</arguments>
<assign>
<var>${output}</var>
</assign>
<msg timestamp="20170302 20:13:25.788" level="INFO">${output} = None</msg>
<status status="PASS" endtime="20170302 20:13:25.788" starttime="20170302 20:13:25.778"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20170302 20:13:25.788" level="INFO">None</msg>
<status status="PASS" endtime="20170302 20:13:25.788" starttime="20170302 20:13:25.788"></status>
</kw>
<kw name="Should Be Equal As Strings" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to strings.</doc>
<arguments>
<arg>${output}</arg>
<arg>None</arg>
</arguments>
<msg timestamp="20170302 20:13:25.788" level="INFO">Argument types are:
&lt;type 'NoneType'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20170302 20:13:25.788" starttime="20170302 20:13:25.788"></status>
</kw>
<kw type="teardown" name="DB Test Teardown" library="testTearDown">
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>SSH Test Teardown nothing is implemented yet</arg>
</arguments>
<msg timestamp="20170302 20:13:25.788" level="INFO">SSH Test Teardown nothing is implemented yet</msg>
<status status="PASS" endtime="20170302 20:13:25.788" starttime="20170302 20:13:25.788"></status>
</kw>
<status status="PASS" endtime="20170302 20:13:25.788" starttime="20170302 20:13:25.788"></status>
</kw>
<tags>
<tag>db</tag>
<tag>smoke</tag>
</tags>
<status status="PASS" endtime="20170302 20:13:25.788" critical="yes" starttime="20170302 20:13:25.778"></status>
</test>
<kw type="teardown" name="Suite Teardown" library="suiteTeardown">
<kw name="Close All Connections" library="SSHLibrary">
<doc>Closes all open connections.</doc>
<status status="PASS" endtime="20170302 20:13:25.829" starttime="20170302 20:13:25.788"></status>
</kw>
<status status="PASS" endtime="20170302 20:13:25.829" starttime="20170302 20:13:25.788"></status>
</kw>
<doc>A test suite with a single test for DB connection.

This test has a workflow that is created using keywords in
the imported resource file.</doc>
<status status="FAIL" endtime="20170302 20:13:25.829" starttime="20170302 20:13:18.241"></status>
</suite>
<statistics>
<total>
<stat fail="1" pass="6">Critical Tests</stat>
<stat fail="1" pass="6">All Tests</stat>
</total>
<tag>
<stat fail="1" pass="6">DB</stat>
<stat fail="1" pass="3">DB_SMOKE</stat>
<stat fail="0" pass="2">smoke</stat>
</tag>
<suite>
<stat fail="1" id="s1" name="DB intaraction" pass="6">DB intaraction</stat>
</suite>
</statistics>
<errors>
</errors>
</robot>
