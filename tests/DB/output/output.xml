<?xml version="1.0" encoding="UTF-8"?>
<robot generated="20170303 11:31:27.573" generator="Robot 3.0.2 (Python 2.7.11 on win32)">
<suite source="C:\WFO-Codeless\tests\DB\DB_intaraction.robot" id="s1" name="DB intaraction">
<kw type="setup" name="Suite Setup" library="suiteSetup">
<kw name="Run Keyword And Ignore Error" library="BuiltIn">
<doc>Runs the given keyword with the given arguments and ignores possible error.</doc>
<arguments>
<arg>Disconnect From Database</arg>
</arguments>
<kw name="Disconnect From Database" library="DatabaseLibrary">
<doc>Disconnects from the database.</doc>
<msg timestamp="20170303 11:31:29.816" level="FAIL">AttributeError: 'NoneType' object has no attribute 'close'</msg>
<status status="FAIL" endtime="20170303 11:31:29.816" starttime="20170303 11:31:29.816"></status>
</kw>
<status status="PASS" endtime="20170303 11:31:29.816" starttime="20170303 11:31:29.816"></status>
</kw>
<kw name="Set Automation Global Variables" library="suiteSetup">
<kw name="Set Global Variable" library="BuiltIn">
<doc>Makes a variable available globally in all tests and suites.</doc>
<arguments>
<arg>${ScreenshotOutputDirectory}</arg>
</arguments>
<msg timestamp="20170303 11:31:29.816" level="INFO">${ScreenshotOutputDirectory} = C:/NPMGit/WFO-Codeless/output/Screenshot</msg>
<status status="PASS" endtime="20170303 11:31:29.816" starttime="20170303 11:31:29.816"></status>
</kw>
<kw name="Set Global Variable" library="BuiltIn">
<doc>Makes a variable available globally in all tests and suites.</doc>
<arguments>
<arg>${DELAY}</arg>
</arguments>
<msg timestamp="20170303 11:31:29.816" level="INFO">${DELAY} = .1 seconds</msg>
<status status="PASS" endtime="20170303 11:31:29.816" starttime="20170303 11:31:29.816"></status>
</kw>
<kw name="Set Global Variable" library="BuiltIn">
<doc>Makes a variable available globally in all tests and suites.</doc>
<arguments>
<arg>${ScreenshotName}</arg>
</arguments>
<msg timestamp="20170303 11:31:29.816" level="INFO">${ScreenshotName} = C:/NPMGit/WFO-Codeless/output/Screenshot\selenium-manual-screenshot-{index}.png</msg>
<status status="PASS" endtime="20170303 11:31:29.816" starttime="20170303 11:31:29.816"></status>
</kw>
<kw name="Set Global Variable" library="BuiltIn">
<doc>Makes a variable available globally in all tests and suites.</doc>
<arguments>
<arg>${LocalLogFolderPath}</arg>
</arguments>
<msg timestamp="20170303 11:31:29.816" level="INFO">${LocalLogFolderPath} = C:\NPMGit\WFO-Codeless\output\logs</msg>
<status status="PASS" endtime="20170303 11:31:29.816" starttime="20170303 11:31:29.816"></status>
</kw>
<kw name="Set Global Variable" library="BuiltIn">
<doc>Makes a variable available globally in all tests and suites.</doc>
<arguments>
<arg>${NCATLogFolderPath}</arg>
</arguments>
<msg timestamp="20170303 11:31:29.816" level="INFO">${NCATLogFolderPath} = /NCAT/NCAT/server/apache-tomcat-7.0.57/logs</msg>
<status status="PASS" endtime="20170303 11:31:29.816" starttime="20170303 11:31:29.816"></status>
</kw>
<kw name="Set Global Variable" library="BuiltIn">
<doc>Makes a variable available globally in all tests and suites.</doc>
<arguments>
<arg>${linux_server3}</arg>
</arguments>
<msg timestamp="20170303 11:31:29.816" level="INFO">${linux_server3} = 172.30.17.15</msg>
<status status="PASS" endtime="20170303 11:31:29.816" starttime="20170303 11:31:29.816"></status>
</kw>
<status status="PASS" endtime="20170303 11:31:29.816" starttime="20170303 11:31:29.816"></status>
</kw>
<kw name="Set Default Configuration" library="SSHLibrary">
<doc>Update the default `configuration`.</doc>
<arguments>
<arg>timeout=20 minute</arg>
</arguments>
<status status="PASS" endtime="20170303 11:31:29.816" starttime="20170303 11:31:29.816"></status>
</kw>
<kw name="Open Server connecions" library="serverConnection">
<kw name="Open Connection to LinuxServer1 And Log In" library="serverConnection">
<doc>This Keyword open a connection to a LinuxServer1</doc>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${linux_server1}</arg>
</arguments>
<msg timestamp="20170303 11:31:29.816" level="INFO">172.30.16.131</msg>
<status status="PASS" endtime="20170303 11:31:29.816" starttime="20170303 11:31:29.816"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${USERNAME}</arg>
</arguments>
<msg timestamp="20170303 11:31:29.817" level="INFO">root</msg>
<status status="PASS" endtime="20170303 11:31:29.817" starttime="20170303 11:31:29.816"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${PASSWORD}</arg>
</arguments>
<msg timestamp="20170303 11:31:29.817" level="INFO">Password1!</msg>
<status status="PASS" endtime="20170303 11:31:29.817" starttime="20170303 11:31:29.817"></status>
</kw>
<kw name="Open Connection" library="SSHLibrary">
<doc>Opens a new SSH connection to the given `host` and `port`.</doc>
<arguments>
<arg>${linux_server1}</arg>
<arg>alias=LinuxServer1</arg>
</arguments>
<status status="PASS" endtime="20170303 11:31:29.817" starttime="20170303 11:31:29.817"></status>
</kw>
<kw name="Login" library="SSHLibrary">
<doc>Logs into the SSH server with the given `username` and `password`.</doc>
<arguments>
<arg>${USERNAME}</arg>
<arg>${PASSWORD}</arg>
</arguments>
<msg timestamp="20170303 11:31:29.817" level="INFO">Logging into '172.30.16.131:22' as 'root'.</msg>
<msg timestamp="20170303 11:31:31.544" level="INFO">Read output: Last login: Fri Mar  3 07:59:16 2017 from 172.23.149.19
[root@ENT-CL-001409 ~]#</msg>
<status status="PASS" endtime="20170303 11:31:31.544" starttime="20170303 11:31:29.817"></status>
</kw>
<status status="PASS" endtime="20170303 11:31:31.544" starttime="20170303 11:31:29.816"></status>
</kw>
<kw name="Open Connection to LinuxServer2 And Log In" library="serverConnection">
<doc>This Keyword open a connection to a LinuxServer2 system</doc>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${linux_server2}</arg>
</arguments>
<msg timestamp="20170303 11:31:31.544" level="INFO">172.30.16.96</msg>
<status status="PASS" endtime="20170303 11:31:31.544" starttime="20170303 11:31:31.544"></status>
</kw>
<kw name="Open Connection" library="SSHLibrary">
<doc>Opens a new SSH connection to the given `host` and `port`.</doc>
<arguments>
<arg>${linux_server2}</arg>
<arg>alias=LinuxServer2</arg>
</arguments>
<status status="PASS" endtime="20170303 11:31:31.544" starttime="20170303 11:31:31.544"></status>
</kw>
<kw name="Login" library="SSHLibrary">
<doc>Logs into the SSH server with the given `username` and `password`.</doc>
<arguments>
<arg>${USERNAME}</arg>
<arg>${PASSWORD}</arg>
</arguments>
<msg timestamp="20170303 11:31:31.544" level="INFO">Logging into '172.30.16.96:22' as 'root'.</msg>
<msg timestamp="20170303 11:31:32.676" level="INFO">Read output: Last login: Fri Mar  3 07:59:17 2017 from 172.23.149.19
[root@ENT-CL-001371 ~]#</msg>
<status status="PASS" endtime="20170303 11:31:32.676" starttime="20170303 11:31:31.544"></status>
</kw>
<status status="PASS" endtime="20170303 11:31:32.676" starttime="20170303 11:31:31.544"></status>
</kw>
<kw name="Open Connection to LinuxServer3 And Log In" library="serverConnection">
<doc>This Keyword open a connection to a LinuxServer2 system</doc>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${linux_server3}</arg>
</arguments>
<msg timestamp="20170303 11:31:32.677" level="INFO">172.30.17.15</msg>
<status status="PASS" endtime="20170303 11:31:32.677" starttime="20170303 11:31:32.677"></status>
</kw>
<kw name="Open Connection" library="SSHLibrary">
<doc>Opens a new SSH connection to the given `host` and `port`.</doc>
<arguments>
<arg>${linux_server3}</arg>
<arg>alias=LinuxServer3</arg>
</arguments>
<status status="PASS" endtime="20170303 11:31:32.678" starttime="20170303 11:31:32.677"></status>
</kw>
<kw name="Login" library="SSHLibrary">
<doc>Logs into the SSH server with the given `username` and `password`.</doc>
<arguments>
<arg>${USERNAME}</arg>
<arg>${PASSWORD}</arg>
</arguments>
<msg timestamp="20170303 11:31:32.678" level="INFO">Logging into '172.30.17.15:22' as 'root'.</msg>
<msg timestamp="20170303 11:31:34.162" level="INFO">Read output: Last login: Fri Mar  3 07:59:16 2017 from 172.23.149.19
[root@ENT-CL-000408 ~]#</msg>
<status status="PASS" endtime="20170303 11:31:34.162" starttime="20170303 11:31:32.678"></status>
</kw>
<status status="PASS" endtime="20170303 11:31:34.162" starttime="20170303 11:31:32.676"></status>
</kw>
<kw name="Switch and Verify Connection to LinuxServer1" library="serverConnection">
<kw name="Switch Connection" library="SSHLibrary">
<doc>Switches the active connection by index or alias.</doc>
<arguments>
<arg>LinuxServer1</arg>
</arguments>
<status status="PASS" endtime="20170303 11:31:34.162" starttime="20170303 11:31:34.162"></status>
</kw>
<kw name="Get Connection" library="SSHLibrary">
<doc>Return information about the connection.</doc>
<assign>
<var>${LinuxServer1}</var>
</assign>
<msg timestamp="20170303 11:31:34.162" level="INFO">index=1
path_separator=/
prompt=None
width=80
newline=

height=24
encoding=UTF-8
alias=LinuxServer1
host=172.30.16.131
timeout=20 minutes
term_type=vt100
port=22</msg>
<msg timestamp="20170303 11:31:34.162" level="INFO">${LinuxServer1} = index=1
path_separator=/
prompt=None
width=80
newline=

height=24
encoding=UTF-8
alias=LinuxServer1
host=172.30.16.131
timeout=20 minutes
term_type=vt100
port=22</msg>
<status status="PASS" endtime="20170303 11:31:34.162" starttime="20170303 11:31:34.162"></status>
</kw>
<kw name="Should Be Equal" library="BuiltIn">
<doc>Fails if the given objects are unequal.</doc>
<arguments>
<arg>${LinuxServer1.alias}</arg>
<arg>LinuxServer1</arg>
<arg>.</arg>
</arguments>
<msg timestamp="20170303 11:31:34.162" level="INFO">Argument types are:
&lt;type 'str'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20170303 11:31:34.162" starttime="20170303 11:31:34.162"></status>
</kw>
<kw name="Execute Command" library="SSHLibrary">
<doc>Executes `command` on the remote machine and returns its outputs.</doc>
<arguments>
<arg>hostname</arg>
</arguments>
<assign>
<var>${LinuxServer1_hostname}</var>
</assign>
<msg timestamp="20170303 11:31:34.162" level="INFO">Executing command 'hostname'.</msg>
<msg timestamp="20170303 11:31:34.164" level="INFO">Command exited with return code 0.</msg>
<msg timestamp="20170303 11:31:34.164" level="INFO">${LinuxServer1_hostname} = ENT-CL-001409</msg>
<status status="PASS" endtime="20170303 11:31:34.164" starttime="20170303 11:31:34.162"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${LinuxServer1_hostname}</arg>
</arguments>
<msg timestamp="20170303 11:31:34.165" level="INFO">ENT-CL-001409</msg>
<status status="PASS" endtime="20170303 11:31:34.165" starttime="20170303 11:31:34.165"></status>
</kw>
<status status="PASS" endtime="20170303 11:31:34.165" starttime="20170303 11:31:34.162"></status>
</kw>
<kw name="Switch and Verify Connection to LinuxServer2" library="serverConnection">
<kw name="Switch Connection" library="SSHLibrary">
<doc>Switches the active connection by index or alias.</doc>
<arguments>
<arg>LinuxServer2</arg>
</arguments>
<status status="PASS" endtime="20170303 11:31:34.166" starttime="20170303 11:31:34.166"></status>
</kw>
<kw name="Get Connection" library="SSHLibrary">
<doc>Return information about the connection.</doc>
<assign>
<var>${LinuxServer2}</var>
</assign>
<msg timestamp="20170303 11:31:34.166" level="INFO">index=2
path_separator=/
prompt=None
width=80
newline=

height=24
encoding=UTF-8
alias=LinuxServer2
host=172.30.16.96
timeout=20 minutes
term_type=vt100
port=22</msg>
<msg timestamp="20170303 11:31:34.166" level="INFO">${LinuxServer2} = index=2
path_separator=/
prompt=None
width=80
newline=

height=24
encoding=UTF-8
alias=LinuxServer2
host=172.30.16.96
timeout=20 minutes
term_type=vt100
port=22</msg>
<status status="PASS" endtime="20170303 11:31:34.167" starttime="20170303 11:31:34.166"></status>
</kw>
<kw name="Should Be Equal" library="BuiltIn">
<doc>Fails if the given objects are unequal.</doc>
<arguments>
<arg>${LinuxServer2.alias}</arg>
<arg>LinuxServer2</arg>
<arg>.</arg>
</arguments>
<msg timestamp="20170303 11:31:34.167" level="INFO">Argument types are:
&lt;type 'str'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20170303 11:31:34.167" starttime="20170303 11:31:34.167"></status>
</kw>
<kw name="Execute Command" library="SSHLibrary">
<doc>Executes `command` on the remote machine and returns its outputs.</doc>
<arguments>
<arg>hostname</arg>
</arguments>
<assign>
<var>${LinuxServer2_hostname}</var>
</assign>
<msg timestamp="20170303 11:31:34.168" level="INFO">Executing command 'hostname'.</msg>
<msg timestamp="20170303 11:31:34.230" level="INFO">Command exited with return code 0.</msg>
<msg timestamp="20170303 11:31:34.230" level="INFO">${LinuxServer2_hostname} = ENT-CL-001371</msg>
<status status="PASS" endtime="20170303 11:31:34.230" starttime="20170303 11:31:34.167"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${LinuxServer2_hostname}</arg>
</arguments>
<msg timestamp="20170303 11:31:34.230" level="INFO">ENT-CL-001371</msg>
<status status="PASS" endtime="20170303 11:31:34.230" starttime="20170303 11:31:34.230"></status>
</kw>
<status status="PASS" endtime="20170303 11:31:34.230" starttime="20170303 11:31:34.165"></status>
</kw>
<kw name="Switch and Verify Connection to LinuxServer3" library="serverConnection">
<kw name="Switch Connection" library="SSHLibrary">
<doc>Switches the active connection by index or alias.</doc>
<arguments>
<arg>LinuxServer3</arg>
</arguments>
<status status="PASS" endtime="20170303 11:31:34.230" starttime="20170303 11:31:34.230"></status>
</kw>
<kw name="Get Connection" library="SSHLibrary">
<doc>Return information about the connection.</doc>
<assign>
<var>${LinuxServer3}</var>
</assign>
<msg timestamp="20170303 11:31:34.230" level="INFO">index=3
path_separator=/
prompt=None
width=80
newline=

height=24
encoding=UTF-8
alias=LinuxServer3
host=172.30.17.15
timeout=20 minutes
term_type=vt100
port=22</msg>
<msg timestamp="20170303 11:31:34.230" level="INFO">${LinuxServer3} = index=3
path_separator=/
prompt=None
width=80
newline=

height=24
encoding=UTF-8
alias=LinuxServer3
host=172.30.17.15
timeout=20 minutes
term_type=vt100
port=22</msg>
<status status="PASS" endtime="20170303 11:31:34.230" starttime="20170303 11:31:34.230"></status>
</kw>
<kw name="Should Be Equal" library="BuiltIn">
<doc>Fails if the given objects are unequal.</doc>
<arguments>
<arg>${LinuxServer3.alias}</arg>
<arg>LinuxServer3</arg>
<arg>.</arg>
</arguments>
<msg timestamp="20170303 11:31:34.230" level="INFO">Argument types are:
&lt;type 'str'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20170303 11:31:34.230" starttime="20170303 11:31:34.230"></status>
</kw>
<kw name="Execute Command" library="SSHLibrary">
<doc>Executes `command` on the remote machine and returns its outputs.</doc>
<arguments>
<arg>hostname</arg>
</arguments>
<assign>
<var>${LinuxServer3_hostname}</var>
</assign>
<msg timestamp="20170303 11:31:34.230" level="INFO">Executing command 'hostname'.</msg>
<msg timestamp="20170303 11:31:34.261" level="INFO">Command exited with return code 0.</msg>
<msg timestamp="20170303 11:31:34.261" level="INFO">${LinuxServer3_hostname} = ENT-CL-000408</msg>
<status status="PASS" endtime="20170303 11:31:34.261" starttime="20170303 11:31:34.230"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${LinuxServer3_hostname}</arg>
</arguments>
<msg timestamp="20170303 11:31:34.261" level="INFO">ENT-CL-000408</msg>
<status status="PASS" endtime="20170303 11:31:34.261" starttime="20170303 11:31:34.261"></status>
</kw>
<status status="PASS" endtime="20170303 11:31:34.261" starttime="20170303 11:31:34.230"></status>
</kw>
<status status="PASS" endtime="20170303 11:31:34.261" starttime="20170303 11:31:29.816"></status>
</kw>
<kw name="Open Connection To MYSQL PHS_EDB Database" library="DB_intaraction">
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${DBName}</arg>
</arguments>
<msg timestamp="20170303 11:31:34.261" level="INFO">phs_edb</msg>
<status status="PASS" endtime="20170303 11:31:34.261" starttime="20170303 11:31:34.261"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${DBUser}</arg>
</arguments>
<msg timestamp="20170303 11:31:34.261" level="INFO">root</msg>
<status status="PASS" endtime="20170303 11:31:34.261" starttime="20170303 11:31:34.261"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${DBPass}</arg>
</arguments>
<msg timestamp="20170303 11:31:34.261" level="INFO">password</msg>
<status status="PASS" endtime="20170303 11:31:34.261" starttime="20170303 11:31:34.261"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${DBHost}</arg>
</arguments>
<msg timestamp="20170303 11:31:34.261" level="INFO">1.224.0.62</msg>
<status status="PASS" endtime="20170303 11:31:34.261" starttime="20170303 11:31:34.261"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${DBPort}</arg>
</arguments>
<msg timestamp="20170303 11:31:34.261" level="INFO">3306</msg>
<status status="PASS" endtime="20170303 11:31:34.261" starttime="20170303 11:31:34.261"></status>
</kw>
<kw name="Connect To Database" library="DatabaseLibrary">
<doc>Loads the DB API 2.0 module given `dbapiModuleName` then uses it to</doc>
<arguments>
<arg>pymysql</arg>
<arg>${DBName}</arg>
<arg>${DBUser}</arg>
<arg>${DBPass}</arg>
<arg>${DBHost}</arg>
<arg>${DBPort}</arg>
</arguments>
<status status="PASS" endtime="20170303 11:31:34.356" starttime="20170303 11:31:34.261"></status>
</kw>
<status status="PASS" endtime="20170303 11:31:34.356" starttime="20170303 11:31:34.261"></status>
</kw>
<status status="PASS" endtime="20170303 11:31:34.356" starttime="20170303 11:31:29.816"></status>
</kw>
<test id="s1-t1" name="Connect To DB Servers and Create Employee Table">
<kw type="setup" name="DB Test Setup" library="testSetup">
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>UI Test Setup nothing is implemented yet</arg>
</arguments>
<msg timestamp="20170303 11:31:34.356" level="INFO">UI Test Setup nothing is implemented yet</msg>
<status status="PASS" endtime="20170303 11:31:34.357" starttime="20170303 11:31:34.356"></status>
</kw>
<status status="PASS" endtime="20170303 11:31:34.357" starttime="20170303 11:31:34.356"></status>
</kw>
<kw name="Execute Sql String" library="DatabaseLibrary">
<doc>Executes the sqlString as SQL commands.</doc>
<arguments>
<arg>CREATE TABLE Employee (id integer unique,first_name varchar(20),last_name varchar(20));</arg>
</arguments>
<assign>
<var>${output}</var>
</assign>
<msg timestamp="20170303 11:31:34.388" level="INFO">${output} = None</msg>
<status status="PASS" endtime="20170303 11:31:34.388" starttime="20170303 11:31:34.357"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20170303 11:31:34.388" level="INFO">None</msg>
<status status="PASS" endtime="20170303 11:31:34.388" starttime="20170303 11:31:34.388"></status>
</kw>
<kw name="Should Be Equal As Strings" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to strings.</doc>
<arguments>
<arg>${output}</arg>
<arg>None</arg>
</arguments>
<msg timestamp="20170303 11:31:34.388" level="INFO">Argument types are:
&lt;type 'NoneType'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20170303 11:31:34.388" starttime="20170303 11:31:34.388"></status>
</kw>
<kw type="teardown" name="DB Test Teardown" library="testTearDown">
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>SSH Test Teardown nothing is implemented yet</arg>
</arguments>
<msg timestamp="20170303 11:31:34.388" level="INFO">SSH Test Teardown nothing is implemented yet</msg>
<status status="PASS" endtime="20170303 11:31:34.388" starttime="20170303 11:31:34.388"></status>
</kw>
<status status="PASS" endtime="20170303 11:31:34.388" starttime="20170303 11:31:34.388"></status>
</kw>
<tags>
<tag>DB</tag>
</tags>
<status status="PASS" endtime="20170303 11:31:34.388" critical="yes" starttime="20170303 11:31:34.356"></status>
</test>
<test id="s1-t2" name="Execute SQL Script - Insert Data Employee table">
<kw type="setup" name="DB Test Setup" library="testSetup">
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>UI Test Setup nothing is implemented yet</arg>
</arguments>
<msg timestamp="20170303 11:31:34.388" level="INFO">UI Test Setup nothing is implemented yet</msg>
<status status="PASS" endtime="20170303 11:31:34.388" starttime="20170303 11:31:34.388"></status>
</kw>
<status status="PASS" endtime="20170303 11:31:34.388" starttime="20170303 11:31:34.388"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${EMP_DataSql}</arg>
</arguments>
<msg timestamp="20170303 11:31:34.388" level="INFO">C:\WFO-Codeless\testdata\DB\my_db_test_insertData.sql</msg>
<status status="PASS" endtime="20170303 11:31:34.388" starttime="20170303 11:31:34.388"></status>
</kw>
<kw name="File Should Exist" library="OperatingSystem">
<doc>Fails unless the given ``path`` points to an existing file.</doc>
<arguments>
<arg>${EMP_DataSql}</arg>
</arguments>
<msg timestamp="20170303 11:31:34.388" html="yes" level="INFO">File '&lt;a href="file://C:\WFO-Codeless\testdata\DB\my_db_test_insertData.sql"&gt;C:\WFO-Codeless\testdata\DB\my_db_test_insertData.sql&lt;/a&gt;' exists.</msg>
<status status="PASS" endtime="20170303 11:31:34.388" starttime="20170303 11:31:34.388"></status>
</kw>
<kw name="Execute Sql Script" library="DatabaseLibrary">
<doc>Executes the content of the `sqlScriptFileName` as SQL commands.</doc>
<arguments>
<arg>${EMP_DataSql}</arg>
</arguments>
<assign>
<var>${output}</var>
</assign>
<msg timestamp="20170303 11:31:34.404" level="INFO">${output} = None</msg>
<status status="PASS" endtime="20170303 11:31:34.404" starttime="20170303 11:31:34.388"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20170303 11:31:34.404" level="INFO">None</msg>
<status status="PASS" endtime="20170303 11:31:34.404" starttime="20170303 11:31:34.404"></status>
</kw>
<kw name="Should Be Equal As Strings" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to strings.</doc>
<arguments>
<arg>${output}</arg>
<arg>None</arg>
</arguments>
<msg timestamp="20170303 11:31:34.404" level="INFO">Argument types are:
&lt;type 'NoneType'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20170303 11:31:34.404" starttime="20170303 11:31:34.404"></status>
</kw>
<kw type="teardown" name="DB Test Teardown" library="testTearDown">
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>SSH Test Teardown nothing is implemented yet</arg>
</arguments>
<msg timestamp="20170303 11:31:34.404" level="INFO">SSH Test Teardown nothing is implemented yet</msg>
<status status="PASS" endtime="20170303 11:31:34.404" starttime="20170303 11:31:34.404"></status>
</kw>
<status status="PASS" endtime="20170303 11:31:34.404" starttime="20170303 11:31:34.404"></status>
</kw>
<tags>
<tag>DB</tag>
<tag>DB_SMOKE</tag>
</tags>
<status status="PASS" endtime="20170303 11:31:34.404" critical="yes" starttime="20170303 11:31:34.388"></status>
</test>
<test id="s1-t3" name="Table Must Exist - Employee">
<kw type="setup" name="DB Test Setup" library="testSetup">
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>UI Test Setup nothing is implemented yet</arg>
</arguments>
<msg timestamp="20170303 11:31:34.404" level="INFO">UI Test Setup nothing is implemented yet</msg>
<status status="PASS" endtime="20170303 11:31:34.404" starttime="20170303 11:31:34.404"></status>
</kw>
<status status="PASS" endtime="20170303 11:31:34.404" starttime="20170303 11:31:34.404"></status>
</kw>
<kw name="Table Must Exist" library="DatabaseLibrary">
<doc>Check if the table given exists in the database.</doc>
<arguments>
<arg>Employee</arg>
</arguments>
<status status="PASS" endtime="20170303 11:31:34.419" starttime="20170303 11:31:34.404"></status>
</kw>
<kw type="teardown" name="DB Test Teardown" library="testTearDown">
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>SSH Test Teardown nothing is implemented yet</arg>
</arguments>
<msg timestamp="20170303 11:31:34.419" level="INFO">SSH Test Teardown nothing is implemented yet</msg>
<status status="PASS" endtime="20170303 11:31:34.419" starttime="20170303 11:31:34.419"></status>
</kw>
<status status="PASS" endtime="20170303 11:31:34.419" starttime="20170303 11:31:34.419"></status>
</kw>
<tags>
<tag>DB</tag>
<tag>DB_SMOKE</tag>
</tags>
<status status="PASS" endtime="20170303 11:31:34.419" critical="yes" starttime="20170303 11:31:34.404"></status>
</test>
<test id="s1-t4" name="Table Must Exist - Employee1">
<kw type="setup" name="DB Test Setup" library="testSetup">
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>UI Test Setup nothing is implemented yet</arg>
</arguments>
<msg timestamp="20170303 11:31:34.419" level="INFO">UI Test Setup nothing is implemented yet</msg>
<status status="PASS" endtime="20170303 11:31:34.419" starttime="20170303 11:31:34.419"></status>
</kw>
<status status="PASS" endtime="20170303 11:31:34.419" starttime="20170303 11:31:34.419"></status>
</kw>
<kw name="Table Must Exist" library="DatabaseLibrary">
<doc>Check if the table given exists in the database.</doc>
<arguments>
<arg>Employee1</arg>
</arguments>
<msg timestamp="20170303 11:31:34.435" level="FAIL">Table 'Employee1' does not exist in the db</msg>
<status status="FAIL" endtime="20170303 11:31:34.435" starttime="20170303 11:31:34.419"></status>
</kw>
<kw type="teardown" name="DB Test Teardown" library="testTearDown">
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>SSH Test Teardown nothing is implemented yet</arg>
</arguments>
<msg timestamp="20170303 11:31:34.435" level="INFO">SSH Test Teardown nothing is implemented yet</msg>
<status status="PASS" endtime="20170303 11:31:34.435" starttime="20170303 11:31:34.435"></status>
</kw>
<status status="PASS" endtime="20170303 11:31:34.435" starttime="20170303 11:31:34.435"></status>
</kw>
<tags>
<tag>DB</tag>
<tag>DB_SMOKE</tag>
</tags>
<status status="FAIL" endtime="20170303 11:31:34.435" critical="yes" starttime="20170303 11:31:34.419">Table 'Employee1' does not exist in the db</status>
</test>
<test id="s1-t5" name="Check If Exists In DB - Franz Allan">
<kw type="setup" name="DB Test Setup" library="testSetup">
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>UI Test Setup nothing is implemented yet</arg>
</arguments>
<msg timestamp="20170303 11:31:34.435" level="INFO">UI Test Setup nothing is implemented yet</msg>
<status status="PASS" endtime="20170303 11:31:34.435" starttime="20170303 11:31:34.435"></status>
</kw>
<status status="PASS" endtime="20170303 11:31:34.435" starttime="20170303 11:31:34.435"></status>
</kw>
<kw name="Check If Exists In Database" library="DatabaseLibrary">
<doc>Check if any row would be returned by given the input</doc>
<arguments>
<arg>SELECT id FROM Employee WHERE first_name = 'Franz Allan';</arg>
</arguments>
<status status="PASS" endtime="20170303 11:31:34.435" starttime="20170303 11:31:34.435"></status>
</kw>
<kw type="teardown" name="DB Test Teardown" library="testTearDown">
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>SSH Test Teardown nothing is implemented yet</arg>
</arguments>
<msg timestamp="20170303 11:31:34.435" level="INFO">SSH Test Teardown nothing is implemented yet</msg>
<status status="PASS" endtime="20170303 11:31:34.435" starttime="20170303 11:31:34.435"></status>
</kw>
<status status="PASS" endtime="20170303 11:31:34.435" starttime="20170303 11:31:34.435"></status>
</kw>
<tags>
<tag>DB</tag>
<tag>DB_SMOKE</tag>
</tags>
<status status="PASS" endtime="20170303 11:31:34.435" critical="yes" starttime="20170303 11:31:34.435"></status>
</test>
<test id="s1-t6" name="Retrieve Row Count">
<kw type="setup" name="DB Test Setup" library="testSetup">
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>UI Test Setup nothing is implemented yet</arg>
</arguments>
<msg timestamp="20170303 11:31:34.435" level="INFO">UI Test Setup nothing is implemented yet</msg>
<status status="PASS" endtime="20170303 11:31:34.435" starttime="20170303 11:31:34.435"></status>
</kw>
<status status="PASS" endtime="20170303 11:31:34.435" starttime="20170303 11:31:34.435"></status>
</kw>
<kw name="Row Count" library="DatabaseLibrary">
<doc>Uses the input `selectStatement` to query the database and returns</doc>
<arguments>
<arg>SELECT id FROM Employee;</arg>
</arguments>
<assign>
<var>${output}</var>
</assign>
<msg timestamp="20170303 11:31:34.451" level="INFO">${output} = 2</msg>
<status status="PASS" endtime="20170303 11:31:34.451" starttime="20170303 11:31:34.435"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20170303 11:31:34.451" level="INFO">2</msg>
<status status="PASS" endtime="20170303 11:31:34.451" starttime="20170303 11:31:34.451"></status>
</kw>
<kw name="Should Be Equal As Strings" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to strings.</doc>
<arguments>
<arg>${output}</arg>
<arg>2</arg>
</arguments>
<msg timestamp="20170303 11:31:34.451" level="INFO">Argument types are:
&lt;type 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20170303 11:31:34.451" starttime="20170303 11:31:34.451"></status>
</kw>
<kw type="teardown" name="DB Test Teardown" library="testTearDown">
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>SSH Test Teardown nothing is implemented yet</arg>
</arguments>
<msg timestamp="20170303 11:31:34.451" level="INFO">SSH Test Teardown nothing is implemented yet</msg>
<status status="PASS" endtime="20170303 11:31:34.451" starttime="20170303 11:31:34.451"></status>
</kw>
<status status="PASS" endtime="20170303 11:31:34.451" starttime="20170303 11:31:34.451"></status>
</kw>
<tags>
<tag>DB</tag>
<tag>DB_SMOKE</tag>
</tags>
<status status="PASS" endtime="20170303 11:31:34.451" critical="yes" starttime="20170303 11:31:34.435"></status>
</test>
<test id="s1-t7" name="Add Employee in first transaction">
<kw type="setup" name="DB Test Setup" library="testSetup">
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>UI Test Setup nothing is implemented yet</arg>
</arguments>
<msg timestamp="20170303 11:31:34.451" level="INFO">UI Test Setup nothing is implemented yet</msg>
<status status="PASS" endtime="20170303 11:31:34.451" starttime="20170303 11:31:34.451"></status>
</kw>
<status status="PASS" endtime="20170303 11:31:34.451" starttime="20170303 11:31:34.451"></status>
</kw>
<kw name="Execute Sql String" library="DatabaseLibrary">
<doc>Executes the sqlString as SQL commands.</doc>
<arguments>
<arg>INSERT INTO Employee VALUES(101,'Bilbo','Baggins');</arg>
</arguments>
<assign>
<var>${output}</var>
</assign>
<msg timestamp="20170303 11:31:34.466" level="INFO">${output} = None</msg>
<status status="PASS" endtime="20170303 11:31:34.466" starttime="20170303 11:31:34.451"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20170303 11:31:34.466" level="INFO">None</msg>
<status status="PASS" endtime="20170303 11:31:34.466" starttime="20170303 11:31:34.466"></status>
</kw>
<kw name="Should Be Equal As Strings" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to strings.</doc>
<arguments>
<arg>${output}</arg>
<arg>None</arg>
</arguments>
<msg timestamp="20170303 11:31:34.466" level="INFO">Argument types are:
&lt;type 'NoneType'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20170303 11:31:34.466" starttime="20170303 11:31:34.466"></status>
</kw>
<kw type="teardown" name="DB Test Teardown" library="testTearDown">
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>SSH Test Teardown nothing is implemented yet</arg>
</arguments>
<msg timestamp="20170303 11:31:34.466" level="INFO">SSH Test Teardown nothing is implemented yet</msg>
<status status="PASS" endtime="20170303 11:31:34.466" starttime="20170303 11:31:34.466"></status>
</kw>
<status status="PASS" endtime="20170303 11:31:34.466" starttime="20170303 11:31:34.466"></status>
</kw>
<tags>
<tag>DB</tag>
<tag>DB_SMOKE</tag>
</tags>
<status status="PASS" endtime="20170303 11:31:34.466" critical="yes" starttime="20170303 11:31:34.451"></status>
</test>
<test id="s1-t8" name="Connect To DB Servers and Drop Employee Table">
<kw type="setup" name="DB Test Setup" library="testSetup">
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>UI Test Setup nothing is implemented yet</arg>
</arguments>
<msg timestamp="20170303 11:31:34.466" level="INFO">UI Test Setup nothing is implemented yet</msg>
<status status="PASS" endtime="20170303 11:31:34.466" starttime="20170303 11:31:34.466"></status>
</kw>
<status status="PASS" endtime="20170303 11:31:34.466" starttime="20170303 11:31:34.466"></status>
</kw>
<kw name="Execute Sql String" library="DatabaseLibrary">
<doc>Executes the sqlString as SQL commands.</doc>
<arguments>
<arg>DROP TABLE Employee ;</arg>
</arguments>
<assign>
<var>${output}</var>
</assign>
<msg timestamp="20170303 11:31:34.483" level="INFO">${output} = None</msg>
<status status="PASS" endtime="20170303 11:31:34.483" starttime="20170303 11:31:34.466"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20170303 11:31:34.483" level="INFO">None</msg>
<status status="PASS" endtime="20170303 11:31:34.483" starttime="20170303 11:31:34.483"></status>
</kw>
<kw name="Should Be Equal As Strings" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to strings.</doc>
<arguments>
<arg>${output}</arg>
<arg>None</arg>
</arguments>
<msg timestamp="20170303 11:31:34.483" level="INFO">Argument types are:
&lt;type 'NoneType'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20170303 11:31:34.483" starttime="20170303 11:31:34.483"></status>
</kw>
<kw type="teardown" name="DB Test Teardown" library="testTearDown">
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>SSH Test Teardown nothing is implemented yet</arg>
</arguments>
<msg timestamp="20170303 11:31:34.483" level="INFO">SSH Test Teardown nothing is implemented yet</msg>
<status status="PASS" endtime="20170303 11:31:34.483" starttime="20170303 11:31:34.483"></status>
</kw>
<status status="PASS" endtime="20170303 11:31:34.483" starttime="20170303 11:31:34.483"></status>
</kw>
<tags>
<tag>DB</tag>
</tags>
<status status="PASS" endtime="20170303 11:31:34.483" critical="yes" starttime="20170303 11:31:34.466"></status>
</test>
<kw type="teardown" name="Suite Teardown" library="suiteTeardown">
<kw name="Close All Connections" library="SSHLibrary">
<doc>Closes all open connections.</doc>
<status status="PASS" endtime="20170303 11:31:34.545" starttime="20170303 11:31:34.483"></status>
</kw>
<kw name="Disconnect From Database" library="DatabaseLibrary">
<doc>Disconnects from the database.</doc>
<status status="PASS" endtime="20170303 11:31:34.545" starttime="20170303 11:31:34.545"></status>
</kw>
<status status="PASS" endtime="20170303 11:31:34.545" starttime="20170303 11:31:34.483"></status>
</kw>
<doc>A test suite with a single test for DB connection.

This test has a workflow that is created using keywords in
the imported resource file.</doc>
<status status="FAIL" endtime="20170303 11:31:34.545" starttime="20170303 11:31:27.574"></status>
</suite>
<statistics>
<total>
<stat fail="1" pass="7">Critical Tests</stat>
<stat fail="1" pass="7">All Tests</stat>
</total>
<tag>
<stat fail="1" pass="7">DB</stat>
<stat fail="1" pass="5">DB_SMOKE</stat>
</tag>
<suite>
<stat fail="1" id="s1" name="DB intaraction" pass="7">DB intaraction</stat>
</suite>
</statistics>
<errors>
</errors>
</robot>
